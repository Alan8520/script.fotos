import os

from PIL import Image

import imagehash

from collections import defaultdict

# Caminho da pasta com as imagens

pasta = r"C:\caminho\para\sua\pasta"  # <--- troque aqui

# Tipos de arquivos válidos

tipos = ('.jpg', '.jpeg', '.png')

# Lista todos os arquivos da pasta

arquivos = [f for f in os.listdir(pasta) if f.lower().endswith(tipos)]

# Agrupar arquivos por NM (baseado no nome antes do parênteses ou extensão)

def extrair_nm(nome):

    base = nome.split('(')[0].strip()

    base = os.path.splitext(base)[0].strip()

    return base

grupos_nm = defaultdict(list)

for arquivo in arquivos:

    nm = extrair_nm(arquivo)

    grupos_nm[nm].append(arquivo)

# Função para comparar duas imagens

def imagens_sao_iguais(caminho1, caminho2):

    try:

        with Image.open(caminho1) as img1, Image.open(caminho2) as img2:

            hash1 = imagehash.phash(img1)

            hash2 = imagehash.phash(img2)

            return hash1 - hash2 == 0  # diferença zero = idênticas

    except Exception as e:

        print(f"Erro ao comparar: {e}")

        return False

# Processar cada grupo de NM

for nm, arquivos_nm in grupos_nm.items():

    print(f"\n🔍 Processando NM: {nm} ({len(arquivos_nm)} arquivos)")

    mantidas = []

    removidas = []

    for atual in arquivos_nm:

        caminho_atual = os.path.join(pasta, atual)

        # Verifica se é idêntica a alguma que já foi mantida

        duplicata = False

        for mantida in mantidas:

            caminho_mantida = os.path.join(pasta, mantida)

            if imagens_sao_iguais(caminho_atual, caminho_mantida):

                duplicata = True

                break

        if duplicata:

            os.remove(caminho_atual)

            removidas.append(atual)

            print(f"🗑️  Removida (idêntica): {atual}")

        elif len(mantidas) < 3:

            mantidas.append(atual)

            print(f"✅ Mantida: {atual}")

        else:

            os.remove(caminho_atual)

            removidas.append(atual)

            print(f"🗑️  Removida (excedente): {atual}")

print("\n✅ Finalizado. Imagens duplicadas e excedentes foram removidas.")
 
